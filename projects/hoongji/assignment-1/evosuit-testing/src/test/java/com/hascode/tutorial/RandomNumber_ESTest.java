/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 18 06:00:03 GMT 2017
 */

package com.hascode.tutorial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hascode.tutorial.RandomNumber;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RandomNumber_ESTest extends RandomNumber_ESTest_scaffolding {

  @Test
  public void test0()  throws Throwable  {
      RandomNumber.oddRate(0, (-841));
  }

  @Test
  public void test1()  throws Throwable  {
      RandomNumber.oddRate(361, (-180));
  }

  @Test
  public void test2()  throws Throwable  {
      RandomNumber.averageCalc((-233), (-233));
  }

  @Test
  public void test3()  throws Throwable  {
      RandomNumber.averageCalc(1068, (-2098));
  }

  @Test
  public void test4()  throws Throwable  {
      RandomNumber.oddRate((-2098), (-2098));
  }

  @Test
  public void test5()  throws Throwable  {
      Random.setNextRandom(349);
      String[] stringArray0 = new String[3];
      RandomNumber.main(stringArray0);
  }

  @Test
  public void test6()  throws Throwable  {
      RandomNumber randomNumber0 = new RandomNumber();
  }

  @Test
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[3];
      RandomNumber.main(stringArray0);
  }

  @Test
  public void test8()  throws Throwable  {
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        RandomNumber.dataDisplay((-1109), 0.0F, (-1006), (-1109), 1.1023856F, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 100
         //
         assertThrownBy("com.hascode.tutorial.RandomNumber", e);
      }
  }

  @Test
  public void test9()  throws Throwable  {
      float float0 = RandomNumber.averageCalc(0, (-1));
      assertEquals(-0.0F, float0, 0.01F);
  }
}
