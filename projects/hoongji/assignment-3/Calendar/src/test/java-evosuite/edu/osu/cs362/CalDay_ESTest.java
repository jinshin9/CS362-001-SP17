/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:44:04 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.osu.cs362.Appt;
import edu.osu.cs362.CalDay;
import java.util.GregorianCalendar;
import java.util.LinkedList;

public class CalDay_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CalDay calDay0 = new CalDay((GregorianCalendar) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.toString();
      calDay0.iterator();
      calDay0.valid = true;
      calDay0.iterator();
      Appt appt0 = null;
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      // Undeclared exception!
      try { 
        calDay0.getSizeAppts();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.osu.cs362.CalDay", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.valid = true;
      calDay0.toString();
      GregorianCalendar gregorianCalendar0 = null;
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.addAppt((Appt) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.getDay();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.month = (-3197);
      calDay0.getMonth();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.getMonth();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.getAppts();
      calDay0.appts = null;
      calDay0.appts = null;
      calDay0.month = 1;
      calDay0.toString();
      calDay0.getYear();
      calDay0.iterator();
      calDay0.getMonth();
      CalDay calDay1 = new CalDay((GregorianCalendar) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.valid = false;
      calDay0.iterator();
      calDay0.getDay();
      calDay0.isValid();
      calDay0.addAppt((Appt) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.getYear();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      LinkedList<Appt> linkedList0 = calDay0.appts;
      calDay0.appts = null;
      calDay0.year = 3692;
      calDay0.getDay();
      CalDay calDay1 = new CalDay((GregorianCalendar) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.month = (-989);
      calDay0.year = 0;
      calDay0.toString();
      calDay0.getDay();
      calDay0.getAppts();
      calDay0.appts = null;
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.getAppts();
      calDay0.day = (-3265);
      calDay0.getYear();
      calDay0.getSizeAppts();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.day = 577;
      calDay0.valid = false;
      calDay0.year = 0;
      calDay0.getYear();
      LinkedList<Appt> linkedList0 = calDay0.appts;
      calDay0.appts = null;
      calDay0.getAppts();
      calDay0.getDay();
      calDay0.year = 577;
      LinkedList<Appt> linkedList1 = calDay0.appts;
      calDay0.valid = true;
      calDay0.getYear();
      calDay0.toString();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.iterator();
      calDay0.month = 1023;
      calDay0.day = 1023;
      calDay0.day = 23;
      calDay0.getAppts();
      calDay0.year = 2176;
      calDay0.appts = null;
      calDay0.iterator();
      calDay0.isValid();
      calDay0.valid = true;
      calDay0.isValid();
      LinkedList<Appt> linkedList0 = calDay0.appts;
      calDay0.toString();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.year = (-2932);
      calDay0.day = (-2932);
      calDay0.toString();
      calDay0.toString();
      calDay0.valid = false;
      LinkedList<Appt> linkedList0 = calDay0.appts;
      calDay0.appts = null;
      int int0 = calDay0.month;
      calDay0.iterator();
      calDay0.year = 0;
      LinkedList<Appt> linkedList1 = calDay0.appts;
      calDay0.year = (-2932);
      calDay0.getAppts();
      calDay0.getDay();
      calDay0.getAppts();
      calDay0.month = 0;
      CalDay calDay1 = new CalDay((GregorianCalendar) null);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CalDay calDay0 = new CalDay();
      calDay0.year = 905;
      calDay0.year = (-1479);
      calDay0.getYear();
      int int0 = calDay0.year;
      calDay0.toString();
      calDay0.getAppts();
      calDay0.iterator();
      calDay0.valid = true;
      calDay0.valid = false;
      calDay0.getSizeAppts();
  }
}
